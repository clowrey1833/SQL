#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data.


#1. How many orders were placed in January?
SELECT COUNT(*) FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

#2. How many of those orders wehre for an iPhone?
SELECT COUNT(*) FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND product = 'iPhone';

#3. Select the customer account numbers for all the orders that were placed in February.
SELECT c.acctnum FROM BIT_DB.customers c
INNER JOIN BIT_DB.FebSales f
ON c.order_id = f.orderID
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

#4. Which product was the cheapest one sold in January, and what was the price?
SELECT j.Product, j.price FROM BIT_DB.JanSales j
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
ORDER BY price
LIMIT 1;

#5. What is the total revenue for each product sold in January?
SELECT j.Product, ROUND(SUM(j.Quantity)*j.price,2) AS revenue FROM BIT_DB.JanSales j
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY Product;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT f.Product, SUM(f.Quantity), f.price*f.Quantity AS total_revenue FROM BIT_DB.FebSales f
WHERE f.location = '548 Lincoln St, Seattle, WA 98101';

#7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(distinct c.acctnum), AVG(f.Quantity * f.price) FROM BIT_DB.FebSales f
LEFT JOIN BIT_DB.customers c
ON f.orderID = c.order_id
WHERE f.Quantity > 2
AND length(orderID) = 6
AND orderID <> 'Order ID'

#8. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY Product;
